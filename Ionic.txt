* https://www.youtube.com/watch?v=3QPbBJgNF94
	-> https://ionicacademy.com/ionic-4-app-api-calls/
* http://www.omdbapi.com/  |  https://swapi.co/api/films
* information?.Genre => This means if 'information' object is null then it won't give errors.



* Install Ionic if you haven't before
npm install -g ionic
 
* Create a blank new Ionic 4 app with Angular support
ionic start movieApp blank --type=angular
cd movieApp
 
* Use the CLI to generate some pages and a service
ionic g page pages/movies
ionic g page pages/movieDetails
ionic g service services/movie

* ionic serve  | ionic lab

* Ionic uses '8100' port by default for local. Previously it was '8101'

* npm i @ionic/lab
* Ionic uses '8200' port by default for lab. Previously it was '8201'



*********************************************************************************************
Steps to Generate ANDROID APK file:
----------------------------------------------------------
* FMD about Generate ANDROID APK file refer below link:
	-> https://ionicframework.com/docs/v3/intro/deploying/


* First need to install Java's JDK & Android latest version
* Then install 'cordova' & 'native-run' globally using below commands
	-> npm install -g ionic cordova
	-> npm i -g native-run
* Then navigate to the project folder and then run below command
	-> ionic cordova run android
* 

*********************************************************************************************



* Useful links to generate APK file:
----------------------------------------------------------
https://www.youtube.com/watch?v=_QlduRREVJI
https://www.youtube.com/watch?v=cP9SWMV4xKg













************************************** Learning - Max *******************************************
*************************************************************************************************
* We can build "Progressive web App", "Adroid", "ios" & "Electron App"(Desktop App) using one codebase(HTML + CSS + Javascript).
* We can create "Hybrid Apps".
* "Hybrid Apps" means runs as a Website & a Mobile App (Incl. Native Device features)

* 'Progressive web App' is web application to look and feel like native app.
* "Capacitor" is a tool which is used to convert 'Web App' to a 'Native App'
* iONIC web components are buit with a tools call "stencil"


Note: We can use IONIC with pure "Vanilla Javascript" also.
* If we want to use IONIC in basic HTML page then first we need to include IONIC's JS and CSS links.
	-> <script type="module" src="https://cdn.jsdelivr.net/npm/@ionic/core/dist/ionic/ionic.esm.js"></script>
	-> <script nomodule src="https://cdn.jsdelivr.net/npm/@ionic/core/dist/ionic/ionic.js"></script>
	-> <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@ionic/core/css/ionic.bundle.css"/>

FMD: https://ionicframework.com/docs/installation/cdn



* Inside of "ionic.config.json" file there will be a property called "'type': 'angular'". This property lets IONIC CLI know that which kind of app you have - This is important for the right build commands.

* "packet.json" file also contains IONIC related packages.

* We use "@ionic/angular" package.

* "ionic serve" know that it should run "ng serve" because of "'type': 'angulae'" property in 'ionic.config.json' file.

* 




IONIC tags & Usage:
--------------------------------------------------------------------------------------------------
* <ion-app> -> This will be used only once in a HTML page just wrap some basic style to the app.
-> <ion-card>
-> <ion-avatar>
-> <ion-icon>
-> <ion-header>
-> <ion-toolbar>
-> <ion-title>
-> <ion-content>
-> <ion-button>
-> <ion-segment>  -> Just like tabs but not tabs

-> 	<ion-list>
		<ion-item> Item <ion-item>
	</ion-list>

-> 	<ion-select>
		<ion-select-option> Option <ion-select-option>
	</ion-select>

FMD => https://ionicframework.com/docs/components








-----------------------------------  IONIC commands  -------------------------------------------
* ionic start
* ionic serve || ng serve
* ionic generate
* npm i -g cordova-res
* ionic cordova platform add android
* ionic capacitor run android -l  => This will run 'ng build' command behind & starts our development server and opens Andoid AVD

* ionic cordova run android --device
* cordova requirements android --verbose
* ionic cordova build android


-------------------------------------------------------------------------------------------------
-----------------------------------  Packages & Usage  ------------------------------------------
* To use Sqlite database
	-> npm install @ionic-native/sqlite
	-> ionic cordova plugin add cordova-sqlite-storage

* To import some data into the Sqlite database first time
	-> npm install @ionic-native/sqlite-porter
	-> ionic cordova plugin add uk.co.workingedge.cordova.plugin.sqliteporter









IONIC lifecycle hooks:
----------------------------------------------------------------------------
* ngOnInit()
* ionViewWillEnter()
* ionViewDidEnter()
* ionViewWillLeave()
* ionViewDidLeave()























Useful sites:
----------------------------------------------------------------------------
* https://devdactic.com/ionic-4-sqlite-queries/
* https://ionicthemes.com/tutorials





My practice project skeleton:
----------------------------------------------------------------------------
* Home
	-> All Developers
		-> Upon clicking it will take to details page
		--> Here we will show only name of the user in a box with 'View', 'Edit' & 'Delete' buttons
	-> Add Developer
		-> "Add Developer" form page
