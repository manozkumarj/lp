* React 'Functional components' & 'React hooks' are supported in React >= 16.8 version only.
* use 'CTRL+m' to open overlay in expo to enable/disable debugging options
* Go to 'react-native-debugger' in github page to download an exe file.
* React uses 'flexbox' by default & default flexDirection is 'column' i.e, top to bottom. But in web default flexDirection is 'row' i.e, right to left
* 




************************************** Differences **************************************
* React Native
-> onPress() == onClick()
-> onChangeText()
-> 



************************************** All about components **************************************
* <Text> component will not accept 'style' property, so if we want to style a <Text> component then we should wrap <Text> compoent with <View> component
Ex: <View style={styles.screen}>
		<Text> Some content <Text>
	<View>

* <Image>
* <ImageBackground>
* <TextInput>
* <Button>
* <TouchableWithoutFeedback>
* <TouchableWithFeedback>
* <TouchableNativeFeedback>
* <TouchableOpacity>
* <Scrollview>
* <SafeAreaView>
* <Switch>



* Android version >= 21 only supports ripple effect

************************************** All about CSS properties **************************************
-> We need to use camelCase while using css properties
-> 'shadow' property is only works in IOS but not in Android. We need to use 'elevation' property to make 'shadow' in Android.
-> We need to use 'Dimensions' API to make app responsive
	Note: 'Dimensions' API only calculate the when the App starts but not when we change the orientation by default. We need to create Dimensions.addEventListener('change', updateLayout)
-> Expo has 'ScreenOrientation' API to work with responsiveness and orientation related things. It's alternative to 'Dimensions' API
-> We need to use 'Keyboard' & 'KeyboardAvoidingView' to work with keyboard related things
-> We need to use 'Alert' to work with alert related things
-> We need to use 'Platform' object to work with platform related things
* <Text> & <Button> components will not accept 'style' property
* marginVertical


Note: If any file contains lot of plotform related if else conditions, then we can create separate files for 'Android' & 'iOS' like below
	-> MainButton.android.js
	-> MainButton.ios.js

	* But while using it we need to import as 'MainButton' only. React-Native automatically loads respective file depends of user platform



************************************** Useful packages **************************************
* npm i -D redux-devtools-extension
* npm i expo-font
* npm i react-navigation -- along with it we need to install below packages
	* expo install react-native-gesture-handler react-native-reanimated
* npm i react-navigation-header-buttons
* npm i react-navigation-material-botton-tabs
* npm i react-native-screens
* npm i react-native-paper
* npm i expo-linear-gradient

************************************** Imports **************************************
* import { View, Text, Button, Image, FlatList, Platform, Stylesheet, ActivityIndicator, AsyncStorage } from 'react-native';
* import { composeWithDevtools } from 'redux-devtools-extension';
* import * as Font from 'expo-font';
	-> First we need install 'expo-font'
* import { AppLoading } from 'expo';
* import { createStackNavigator, createBottomTabNavigator, createAppContainer, createDrawerNavigator, createSwitchNavigator } from 'react-navigation';
* import { HeaderButton, Item } from 'react-navigation-header-buttons';
* import { useScreens } from 'react-native-screens';
* import { Ionicons } from '@expo/vector-icons';
* import { createMaterialBottomTabNavigator } from 'react-navigation-material-botton-tabs';
* import { LinearGradient } from 'expo-linear-gradient';


************************************** IMP points **************************************
* We need to remove 'composeWithDevtools' after completion of project development
* 'onRefresh' only works for 'ScrollView' & 'FlatList' tags





************************************** Errors **************************************
* If we get 'There was a problem sending log messages to your development server' while doing API call - It's because the data is huge from API request. In that case we can use "response.data"
* 



************************************** Useful sites **************************************
* www.reactnavigation.org
* https://stackoverflow.com/questions/33879155/how-to-redirect-to-a-page-in-react-native
* https://github.com/react-native-community/react-native-modal
* https://www.pubnub.com/blog/react-native-push-notifications-ios-android/
* 







******************************** Useful sites for CSS related *********************************
* https://codepen.io/manozkumarj/pen/xxZqzjO
* https://codedaily.io/tutorials/22/The-Shapes-of-React-Native
* https://reactnativeexample.com/beautiful-backgrounds-shapes-to-react-native-based-in-flex/
* https://reactnativecode.com/detect-orientation-android-ios-example-tutorial/
* https://jsfiddle.net/kishore328/gs3nv9ty/5
* https://stackoverflow.com/questions/50149063/react-native-image-semi-circle-using-css
* https://reactnativeforyou.com/how-to-convert-view-into-custom-shapes-like-square-rectangle-circle-and-triangle/
* https://stackoverflow.com/questions/44232282/elliptical-border-radius-in-react-native?rq=1
* 
